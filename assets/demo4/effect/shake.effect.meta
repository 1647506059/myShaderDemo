{
  "ver": "1.0.27",
  "uuid": "bd6b5ebe-22ab-4c68-906b-ed0bcc9681e1",
  "importer": "effect",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nuniform vec2 touch_pos;\nuniform float u_time;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nvoid main () {\n  vec2 uv = v_uv0;\n  vec2 p = touch_pos;\n  vec2 off = p - uv;\n  off.x *= vec2(1200.,1600.).x / vec2(1200.,1600.).y;\n  float dis = length(off);\n  float r = .02;\n  r += u_time * .6;\n  float width = .005;\n  float border = .01;\n  border *= r * 30.5;\n  float circle = smoothstep(r + width + border , r + width , dis) - smoothstep(r , r - border , dis);\n  circle *= .4;\n  circle *= max(.3 - dis, 0.);\n  uv = uv + (uv - p) * circle;\n  vec4 tex = texture2D(texture , uv);\n  gl_FragColor = vec4(tex.xyz , tex.w);\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nuniform inputData{\n  vec2 touch_pos;\n  float u_time;\n};\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nvoid main () {\n  vec2 uv = v_uv0;\n  vec2 p = touch_pos;\n  vec2 off = p - uv;\n  off.x *= vec2(1200.,1600.).x / vec2(1200.,1600.).y;\n  float dis = length(off);\n  float r = .02;\n  r += u_time * .6;\n  float width = .005;\n  float border = .01;\n  border *= r * 30.5;\n  float circle = smoothstep(r + width + border , r + width , dis) - smoothstep(r , r - border , dis);\n  circle *= .4;\n  circle *= max(.3 - dis, 0.);\n  uv = uv + (uv - p) * circle;\n  vec4 tex = texture2D(texture , uv);\n  gl_FragColor = vec4(tex.xyz , tex.w);\n}"
      }
    }
  ],
  "subMetas": {}
}